[함수]
코드의 집합
ex) 지금까지 사용하던 alert()이나 prompt()같은 것들.

input을 집어넣으면, output이 나오는 것.

[익명 함수]
function () {}형태는 함수지만, 이름이 없는 함수다.
이름이 없으므로 변수에 넣어 사용해야 함.

[내장 함수]
모든 브라우저는 '내장하고 있는 함수'를 볼 수 없게 막아놓음.
'선언적 함수' 
<script>
  alert(alert);
  alert(prompt);
</script>
위 함수는 alert.prompt라는 이름을 가지고 있음.

[일반적인 함수의 형식]
'선언적 함수'
function 함수() {  
}

위 함수와 아래 함수는 같은 기능을 수행함
var 함수 = function () {};

익명 함수와 마찬가지 방법으로 만들고 사용.

[매개 변수와 리턴값]
매개 변수 : 함수를 호출할 때 괄호 안에 적는 것
리턴값 : 함수를 호출하고 함수가 변환되는 값

prompt() 함수를 사용하면 사용자가 입력한 문자열로 변환


[매개 변수]
매개 변수 : 함수를 호출하는 쪽, 호출된 함수를 연결하는 매개가 되는 변수. 한마디로 '삐끼', '바톤' -> 연결, 전달의 역할. 어떤 데이터를 넣기 위해서는 매개 변수가 필요하다.
자바스크림트는 함수를 생성할 때, 지정한 매개 변수보다 적은 매개 변수 사용하는 걸 허용한다.

*원래 함수에서 선언된 매개 변수보다 많은 매개 변수를 사용하면?
-> 추가된 매개 변수를 무시한다.

ex) alert은 원래 한개의 매개변수를 받지만, 두 개를 입력해도 실행이 된다. 두 번째 매개 변수를 무시한다.
prompt는 원래 두 개의 매개변수를 받는다. 하나만 입력해도 실행이 된다. (기본값이 미리 지정되어 있음.)


인자( Argument ) 는 어떤 함수를 호출시에 전달돼는 값을 말하고
매개 형식 변수( Parameter ) 는 그 전달된 인자를 받아들이는 변수다.

여기서 포인트는 인자는 값, 매개 형식 변수는 말 그대로 변수라는 점이다.



[함수의 매개 변수 숫자가 다를 때 처리하는 예제]
배열 arguments의 요소 개수에 따라 조건 설정

<script>
  function 어떻게함수() {
    //매개 변수 개수 가져오기
    var length = arguments.length;

    //조건 나누기
    if (length  === 0 ) {
      //매개 변수가 없을 때
    } else if (length === 1) {
      //매개 변수가 한 개일 때
    } else {
      //매개 변수가 두 개일 때
    }
  }
  </script>


  [return]
  리턴값 활용
  return -> 이 키워드를 사용해 함수를 호출한 곳으로 값 넘김
  return 키워드 : 함수가 실행되는 도중, 함수를 호출한 곳으로 돌아가라는 뜻
  return 키워드 사용시 값을 지정하지 않아도 함수를 '호출한 곳'으로 돌아감.

<scipt>
  function returnTest() {
    alert('문장 A');
    return;
    alert('문장 B');
  }
  returnTest();
</script>
위 예제에서 '문장 A'만 출력됨.



[내부 함수]
함수 내부에 선언한 함수

function 외부 함수() {
  function 내부 함수 1() {
    // 함수 코드
  }
  function 내부 함수 2() {
    // 함수 코드
  }
  //함수 코드
}